// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing Sign Up Page renders as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Component
    style={
      Object {
        "backgroundColor": "#bbb",
        "flex": 1,
        "flexDirection": "column",
        "justifyContent": "center",
        "paddingTop": 22,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "alignSelf": "center",
          "fontSize": 40,
        }
      }
    >
      Top Goaler
    </Text>
    <Themed.Card
      title="Sign up for free"
    >
      <ForwardRef(Themed.Input)
        autoCapitalize="none"
        containerStyle={
          Object {
            "marginBottom": 10,
          }
        }
        leftIcon={
          <Themed.Icon
            color="grey"
            name="person"
            size={24}
          />
        }
        onChangeText={[Function]}
        placeholder="Username"
        value=""
      />
      <ForwardRef(Themed.Input)
        autoCapitalize="none"
        containerStyle={
          Object {
            "marginVertical": 10,
          }
        }
        leftIcon={
          <Themed.Icon
            color="grey"
            name="lock"
            size={24}
          />
        }
        onChangeText={[Function]}
        placeholder="Password"
        secureTextEntry={true}
        textContentType="password"
        value=""
      />
      <ForwardRef(Themed.Input)
        autoCapitalize="none"
        containerStyle={
          Object {
            "marginVertical": 10,
          }
        }
        leftIcon={
          <Themed.Icon
            color="grey"
            name="email"
            size={24}
          />
        }
        onChangeText={[Function]}
        placeholder="Email"
        value=""
      />
      <TouchableHighlight
        activeOpacity={0.85}
        delayPressOut={100}
        onPress={[Function]}
        style={
          Object {
            "backgroundColor": "grey",
            "borderColor": "#fff",
            "borderRadius": 20,
            "borderWidth": 1,
            "marginHorizontal": 40,
            "marginTop": 10,
            "paddingVertical": 10,
          }
        }
        underlayColor="#aaa"
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#fff",
              "fontSize": 20,
              "textAlign": "center",
            }
          }
        >
           Create Account 
        </Text>
      </TouchableHighlight>
    </Themed.Card>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "alignSelf": "center",
          "color": "grey",
          "paddingTop": 20,
        }
      }
    >
      Or you can also:
    </Text>
    <TouchableHighlight
      activeOpacity={0.85}
      delayPressOut={100}
      style={
        Array [
          Object {
            "borderRadius": 10,
            "marginHorizontal": 40,
            "marginTop": 10,
            "paddingVertical": 10,
          },
          Object {
            "backgroundColor": "#3b5998",
          },
        ]
      }
      underlayColor="#aaa"
    >
      <Component
        style={
          Object {
            "alignSelf": "center",
            "flexDirection": "row",
          }
        }
      >
        <Themed.Icon
          color="white"
          name="facebook-square"
          type="font-awesome"
        />
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#fff",
              "fontSize": 20,
              "paddingLeft": 10,
              "textAlign": "center",
            }
          }
        >
           Log in with Facebook 
        </Text>
      </Component>
    </TouchableHighlight>
    <TouchableHighlight
      activeOpacity={0.85}
      delayPressOut={100}
      style={
        Array [
          Object {
            "borderRadius": 10,
            "marginHorizontal": 40,
            "marginTop": 10,
            "paddingVertical": 10,
          },
          Object {
            "backgroundColor": "#dd4b39",
          },
        ]
      }
      underlayColor="#aaa"
    >
      <Component
        style={
          Object {
            "alignSelf": "center",
            "flexDirection": "row",
          }
        }
      >
        <Themed.Icon
          color="white"
          name="google-plus"
          type="font-awesome"
        />
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#fff",
              "fontSize": 20,
              "paddingLeft": 10,
              "textAlign": "center",
            }
          }
        >
           Log in with Google 
        </Text>
      </Component>
    </TouchableHighlight>
    <TouchableHighlight
      activeOpacity={0.85}
      delayPressOut={100}
      style={
        Array [
          Object {
            "borderRadius": 10,
            "marginHorizontal": 40,
            "marginTop": 10,
            "paddingVertical": 10,
          },
          Object {
            "backgroundColor": "#00aced",
          },
        ]
      }
      underlayColor="#aaa"
    >
      <Component
        style={
          Object {
            "alignSelf": "center",
            "flexDirection": "row",
          }
        }
      >
        <Themed.Icon
          color="white"
          name="twitter"
          type="font-awesome"
        />
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#fff",
              "fontSize": 20,
              "paddingLeft": 10,
              "textAlign": "center",
            }
          }
        >
           Log in with Twitter 
        </Text>
      </Component>
    </TouchableHighlight>
    <TouchableHighlight
      activeOpacity={0.85}
      delayPressOut={100}
      onPress={[Function]}
      style={
        Object {
          "borderRadius": 10,
          "marginHorizontal": 40,
          "marginTop": 10,
          "paddingVertical": 10,
        }
      }
      underlayColor="#aaa"
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#fff",
            "fontSize": 20,
            "paddingLeft": 10,
            "textAlign": "center",
          }
        }
      >
         I have an account 
      </Text>
    </TouchableHighlight>
  </Component>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "alignSelf": "center",
              "fontSize": 40,
            }
          }
        >
          Top Goaler
        </Text>,
        <Themed.Card
          title="Sign up for free"
        >
          <ForwardRef(Themed.Input)
            autoCapitalize="none"
            containerStyle={
              Object {
                "marginBottom": 10,
              }
            }
            leftIcon={
              <Themed.Icon
                color="grey"
                name="person"
                size={24}
              />
            }
            onChangeText={[Function]}
            placeholder="Username"
            value=""
          />
          <ForwardRef(Themed.Input)
            autoCapitalize="none"
            containerStyle={
              Object {
                "marginVertical": 10,
              }
            }
            leftIcon={
              <Themed.Icon
                color="grey"
                name="lock"
                size={24}
              />
            }
            onChangeText={[Function]}
            placeholder="Password"
            secureTextEntry={true}
            textContentType="password"
            value=""
          />
          <ForwardRef(Themed.Input)
            autoCapitalize="none"
            containerStyle={
              Object {
                "marginVertical": 10,
              }
            }
            leftIcon={
              <Themed.Icon
                color="grey"
                name="email"
                size={24}
              />
            }
            onChangeText={[Function]}
            placeholder="Email"
            value=""
          />
          <TouchableHighlight
            activeOpacity={0.85}
            delayPressOut={100}
            onPress={[Function]}
            style={
              Object {
                "backgroundColor": "grey",
                "borderColor": "#fff",
                "borderRadius": 20,
                "borderWidth": 1,
                "marginHorizontal": 40,
                "marginTop": 10,
                "paddingVertical": 10,
              }
            }
            underlayColor="#aaa"
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#fff",
                  "fontSize": 20,
                  "textAlign": "center",
                }
              }
            >
               Create Account 
            </Text>
          </TouchableHighlight>
        </Themed.Card>,
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "alignSelf": "center",
              "color": "grey",
              "paddingTop": 20,
            }
          }
        >
          Or you can also:
        </Text>,
        <TouchableHighlight
          activeOpacity={0.85}
          delayPressOut={100}
          style={
            Array [
              Object {
                "borderRadius": 10,
                "marginHorizontal": 40,
                "marginTop": 10,
                "paddingVertical": 10,
              },
              Object {
                "backgroundColor": "#3b5998",
              },
            ]
          }
          underlayColor="#aaa"
        >
          <Component
            style={
              Object {
                "alignSelf": "center",
                "flexDirection": "row",
              }
            }
          >
            <Themed.Icon
              color="white"
              name="facebook-square"
              type="font-awesome"
            />
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#fff",
                  "fontSize": 20,
                  "paddingLeft": 10,
                  "textAlign": "center",
                }
              }
            >
               Log in with Facebook 
            </Text>
          </Component>
        </TouchableHighlight>,
        <TouchableHighlight
          activeOpacity={0.85}
          delayPressOut={100}
          style={
            Array [
              Object {
                "borderRadius": 10,
                "marginHorizontal": 40,
                "marginTop": 10,
                "paddingVertical": 10,
              },
              Object {
                "backgroundColor": "#dd4b39",
              },
            ]
          }
          underlayColor="#aaa"
        >
          <Component
            style={
              Object {
                "alignSelf": "center",
                "flexDirection": "row",
              }
            }
          >
            <Themed.Icon
              color="white"
              name="google-plus"
              type="font-awesome"
            />
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#fff",
                  "fontSize": 20,
                  "paddingLeft": 10,
                  "textAlign": "center",
                }
              }
            >
               Log in with Google 
            </Text>
          </Component>
        </TouchableHighlight>,
        <TouchableHighlight
          activeOpacity={0.85}
          delayPressOut={100}
          style={
            Array [
              Object {
                "borderRadius": 10,
                "marginHorizontal": 40,
                "marginTop": 10,
                "paddingVertical": 10,
              },
              Object {
                "backgroundColor": "#00aced",
              },
            ]
          }
          underlayColor="#aaa"
        >
          <Component
            style={
              Object {
                "alignSelf": "center",
                "flexDirection": "row",
              }
            }
          >
            <Themed.Icon
              color="white"
              name="twitter"
              type="font-awesome"
            />
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#fff",
                  "fontSize": 20,
                  "paddingLeft": 10,
                  "textAlign": "center",
                }
              }
            >
               Log in with Twitter 
            </Text>
          </Component>
        </TouchableHighlight>,
        <TouchableHighlight
          activeOpacity={0.85}
          delayPressOut={100}
          onPress={[Function]}
          style={
            Object {
              "borderRadius": 10,
              "marginHorizontal": 40,
              "marginTop": 10,
              "paddingVertical": 10,
            }
          }
          underlayColor="#aaa"
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#fff",
                "fontSize": 20,
                "paddingLeft": 10,
                "textAlign": "center",
              }
            }
          >
             I have an account 
          </Text>
        </TouchableHighlight>,
      ],
      "style": Object {
        "backgroundColor": "#bbb",
        "flex": 1,
        "flexDirection": "column",
        "justifyContent": "center",
        "paddingTop": 22,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "accessible": true,
          "allowFontScaling": true,
          "children": "Top Goaler",
          "ellipsizeMode": "tail",
          "style": Object {
            "alignSelf": "center",
            "fontSize": 40,
          },
        },
        "ref": null,
        "rendered": "Top Goaler",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <ForwardRef(Themed.Input)
              autoCapitalize="none"
              containerStyle={
                Object {
                  "marginBottom": 10,
                }
              }
              leftIcon={
                <Themed.Icon
                  color="grey"
                  name="person"
                  size={24}
                />
              }
              onChangeText={[Function]}
              placeholder="Username"
              value=""
            />,
            <ForwardRef(Themed.Input)
              autoCapitalize="none"
              containerStyle={
                Object {
                  "marginVertical": 10,
                }
              }
              leftIcon={
                <Themed.Icon
                  color="grey"
                  name="lock"
                  size={24}
                />
              }
              onChangeText={[Function]}
              placeholder="Password"
              secureTextEntry={true}
              textContentType="password"
              value=""
            />,
            <ForwardRef(Themed.Input)
              autoCapitalize="none"
              containerStyle={
                Object {
                  "marginVertical": 10,
                }
              }
              leftIcon={
                <Themed.Icon
                  color="grey"
                  name="email"
                  size={24}
                />
              }
              onChangeText={[Function]}
              placeholder="Email"
              value=""
            />,
            <TouchableHighlight
              activeOpacity={0.85}
              delayPressOut={100}
              onPress={[Function]}
              style={
                Object {
                  "backgroundColor": "grey",
                  "borderColor": "#fff",
                  "borderRadius": 20,
                  "borderWidth": 1,
                  "marginHorizontal": 40,
                  "marginTop": 10,
                  "paddingVertical": 10,
                }
              }
              underlayColor="#aaa"
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 20,
                    "textAlign": "center",
                  }
                }
              >
                 Create Account 
              </Text>
            </TouchableHighlight>,
          ],
          "title": "Sign up for free",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "autoCapitalize": "none",
              "containerStyle": Object {
                "marginBottom": 10,
              },
              "leftIcon": <Themed.Icon
                color="grey"
                name="person"
                size={24}
              />,
              "onChangeText": [Function],
              "placeholder": "Username",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "autoCapitalize": "none",
              "containerStyle": Object {
                "marginVertical": 10,
              },
              "leftIcon": <Themed.Icon
                color="grey"
                name="lock"
                size={24}
              />,
              "onChangeText": [Function],
              "placeholder": "Password",
              "secureTextEntry": true,
              "textContentType": "password",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "autoCapitalize": "none",
              "containerStyle": Object {
                "marginVertical": 10,
              },
              "leftIcon": <Themed.Icon
                color="grey"
                name="email"
                size={24}
              />,
              "onChangeText": [Function],
              "placeholder": "Email",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeOpacity": 0.85,
              "children": <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 20,
                    "textAlign": "center",
                  }
                }
              >
                 Create Account 
              </Text>,
              "delayPressOut": 100,
              "onPress": [Function],
              "style": Object {
                "backgroundColor": "grey",
                "borderColor": "#fff",
                "borderRadius": 20,
                "borderWidth": 1,
                "marginHorizontal": 40,
                "marginTop": 10,
                "paddingVertical": 10,
              },
              "underlayColor": "#aaa",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "accessible": true,
                "allowFontScaling": true,
                "children": " Create Account ",
                "ellipsizeMode": "tail",
                "style": Object {
                  "color": "#fff",
                  "fontSize": 20,
                  "textAlign": "center",
                },
              },
              "ref": null,
              "rendered": " Create Account ",
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "accessible": true,
          "allowFontScaling": true,
          "children": "Or you can also:",
          "ellipsizeMode": "tail",
          "style": Object {
            "alignSelf": "center",
            "color": "grey",
            "paddingTop": 20,
          },
        },
        "ref": null,
        "rendered": "Or you can also:",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activeOpacity": 0.85,
          "children": <Component
            style={
              Object {
                "alignSelf": "center",
                "flexDirection": "row",
              }
            }
          >
            <Themed.Icon
              color="white"
              name="facebook-square"
              type="font-awesome"
            />
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#fff",
                  "fontSize": 20,
                  "paddingLeft": 10,
                  "textAlign": "center",
                }
              }
            >
               Log in with Facebook 
            </Text>
          </Component>,
          "delayPressOut": 100,
          "style": Array [
            Object {
              "borderRadius": 10,
              "marginHorizontal": 40,
              "marginTop": 10,
              "paddingVertical": 10,
            },
            Object {
              "backgroundColor": "#3b5998",
            },
          ],
          "underlayColor": "#aaa",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Themed.Icon
                color="white"
                name="facebook-square"
                type="font-awesome"
              />,
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 20,
                    "paddingLeft": 10,
                    "textAlign": "center",
                  }
                }
              >
                 Log in with Facebook 
              </Text>,
            ],
            "style": Object {
              "alignSelf": "center",
              "flexDirection": "row",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "color": "white",
                "name": "facebook-square",
                "type": "font-awesome",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "accessible": true,
                "allowFontScaling": true,
                "children": " Log in with Facebook ",
                "ellipsizeMode": "tail",
                "style": Object {
                  "color": "#fff",
                  "fontSize": 20,
                  "paddingLeft": 10,
                  "textAlign": "center",
                },
              },
              "ref": null,
              "rendered": " Log in with Facebook ",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activeOpacity": 0.85,
          "children": <Component
            style={
              Object {
                "alignSelf": "center",
                "flexDirection": "row",
              }
            }
          >
            <Themed.Icon
              color="white"
              name="google-plus"
              type="font-awesome"
            />
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#fff",
                  "fontSize": 20,
                  "paddingLeft": 10,
                  "textAlign": "center",
                }
              }
            >
               Log in with Google 
            </Text>
          </Component>,
          "delayPressOut": 100,
          "style": Array [
            Object {
              "borderRadius": 10,
              "marginHorizontal": 40,
              "marginTop": 10,
              "paddingVertical": 10,
            },
            Object {
              "backgroundColor": "#dd4b39",
            },
          ],
          "underlayColor": "#aaa",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Themed.Icon
                color="white"
                name="google-plus"
                type="font-awesome"
              />,
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 20,
                    "paddingLeft": 10,
                    "textAlign": "center",
                  }
                }
              >
                 Log in with Google 
              </Text>,
            ],
            "style": Object {
              "alignSelf": "center",
              "flexDirection": "row",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "color": "white",
                "name": "google-plus",
                "type": "font-awesome",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "accessible": true,
                "allowFontScaling": true,
                "children": " Log in with Google ",
                "ellipsizeMode": "tail",
                "style": Object {
                  "color": "#fff",
                  "fontSize": 20,
                  "paddingLeft": 10,
                  "textAlign": "center",
                },
              },
              "ref": null,
              "rendered": " Log in with Google ",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activeOpacity": 0.85,
          "children": <Component
            style={
              Object {
                "alignSelf": "center",
                "flexDirection": "row",
              }
            }
          >
            <Themed.Icon
              color="white"
              name="twitter"
              type="font-awesome"
            />
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#fff",
                  "fontSize": 20,
                  "paddingLeft": 10,
                  "textAlign": "center",
                }
              }
            >
               Log in with Twitter 
            </Text>
          </Component>,
          "delayPressOut": 100,
          "style": Array [
            Object {
              "borderRadius": 10,
              "marginHorizontal": 40,
              "marginTop": 10,
              "paddingVertical": 10,
            },
            Object {
              "backgroundColor": "#00aced",
            },
          ],
          "underlayColor": "#aaa",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Themed.Icon
                color="white"
                name="twitter"
                type="font-awesome"
              />,
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 20,
                    "paddingLeft": 10,
                    "textAlign": "center",
                  }
                }
              >
                 Log in with Twitter 
              </Text>,
            ],
            "style": Object {
              "alignSelf": "center",
              "flexDirection": "row",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "color": "white",
                "name": "twitter",
                "type": "font-awesome",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "accessible": true,
                "allowFontScaling": true,
                "children": " Log in with Twitter ",
                "ellipsizeMode": "tail",
                "style": Object {
                  "color": "#fff",
                  "fontSize": 20,
                  "paddingLeft": 10,
                  "textAlign": "center",
                },
              },
              "ref": null,
              "rendered": " Log in with Twitter ",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activeOpacity": 0.85,
          "children": <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#fff",
                "fontSize": 20,
                "paddingLeft": 10,
                "textAlign": "center",
              }
            }
          >
             I have an account 
          </Text>,
          "delayPressOut": 100,
          "onPress": [Function],
          "style": Object {
            "borderRadius": 10,
            "marginHorizontal": 40,
            "marginTop": 10,
            "paddingVertical": 10,
          },
          "underlayColor": "#aaa",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": " I have an account ",
            "ellipsizeMode": "tail",
            "style": Object {
              "color": "#fff",
              "fontSize": 20,
              "paddingLeft": 10,
              "textAlign": "center",
            },
          },
          "ref": null,
          "rendered": " I have an account ",
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": "View",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "alignSelf": "center",
                "fontSize": 40,
              }
            }
          >
            Top Goaler
          </Text>,
          <Themed.Card
            title="Sign up for free"
          >
            <ForwardRef(Themed.Input)
              autoCapitalize="none"
              containerStyle={
                Object {
                  "marginBottom": 10,
                }
              }
              leftIcon={
                <Themed.Icon
                  color="grey"
                  name="person"
                  size={24}
                />
              }
              onChangeText={[Function]}
              placeholder="Username"
              value=""
            />
            <ForwardRef(Themed.Input)
              autoCapitalize="none"
              containerStyle={
                Object {
                  "marginVertical": 10,
                }
              }
              leftIcon={
                <Themed.Icon
                  color="grey"
                  name="lock"
                  size={24}
                />
              }
              onChangeText={[Function]}
              placeholder="Password"
              secureTextEntry={true}
              textContentType="password"
              value=""
            />
            <ForwardRef(Themed.Input)
              autoCapitalize="none"
              containerStyle={
                Object {
                  "marginVertical": 10,
                }
              }
              leftIcon={
                <Themed.Icon
                  color="grey"
                  name="email"
                  size={24}
                />
              }
              onChangeText={[Function]}
              placeholder="Email"
              value=""
            />
            <TouchableHighlight
              activeOpacity={0.85}
              delayPressOut={100}
              onPress={[Function]}
              style={
                Object {
                  "backgroundColor": "grey",
                  "borderColor": "#fff",
                  "borderRadius": 20,
                  "borderWidth": 1,
                  "marginHorizontal": 40,
                  "marginTop": 10,
                  "paddingVertical": 10,
                }
              }
              underlayColor="#aaa"
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 20,
                    "textAlign": "center",
                  }
                }
              >
                 Create Account 
              </Text>
            </TouchableHighlight>
          </Themed.Card>,
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "alignSelf": "center",
                "color": "grey",
                "paddingTop": 20,
              }
            }
          >
            Or you can also:
          </Text>,
          <TouchableHighlight
            activeOpacity={0.85}
            delayPressOut={100}
            style={
              Array [
                Object {
                  "borderRadius": 10,
                  "marginHorizontal": 40,
                  "marginTop": 10,
                  "paddingVertical": 10,
                },
                Object {
                  "backgroundColor": "#3b5998",
                },
              ]
            }
            underlayColor="#aaa"
          >
            <Component
              style={
                Object {
                  "alignSelf": "center",
                  "flexDirection": "row",
                }
              }
            >
              <Themed.Icon
                color="white"
                name="facebook-square"
                type="font-awesome"
              />
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 20,
                    "paddingLeft": 10,
                    "textAlign": "center",
                  }
                }
              >
                 Log in with Facebook 
              </Text>
            </Component>
          </TouchableHighlight>,
          <TouchableHighlight
            activeOpacity={0.85}
            delayPressOut={100}
            style={
              Array [
                Object {
                  "borderRadius": 10,
                  "marginHorizontal": 40,
                  "marginTop": 10,
                  "paddingVertical": 10,
                },
                Object {
                  "backgroundColor": "#dd4b39",
                },
              ]
            }
            underlayColor="#aaa"
          >
            <Component
              style={
                Object {
                  "alignSelf": "center",
                  "flexDirection": "row",
                }
              }
            >
              <Themed.Icon
                color="white"
                name="google-plus"
                type="font-awesome"
              />
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 20,
                    "paddingLeft": 10,
                    "textAlign": "center",
                  }
                }
              >
                 Log in with Google 
              </Text>
            </Component>
          </TouchableHighlight>,
          <TouchableHighlight
            activeOpacity={0.85}
            delayPressOut={100}
            style={
              Array [
                Object {
                  "borderRadius": 10,
                  "marginHorizontal": 40,
                  "marginTop": 10,
                  "paddingVertical": 10,
                },
                Object {
                  "backgroundColor": "#00aced",
                },
              ]
            }
            underlayColor="#aaa"
          >
            <Component
              style={
                Object {
                  "alignSelf": "center",
                  "flexDirection": "row",
                }
              }
            >
              <Themed.Icon
                color="white"
                name="twitter"
                type="font-awesome"
              />
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 20,
                    "paddingLeft": 10,
                    "textAlign": "center",
                  }
                }
              >
                 Log in with Twitter 
              </Text>
            </Component>
          </TouchableHighlight>,
          <TouchableHighlight
            activeOpacity={0.85}
            delayPressOut={100}
            onPress={[Function]}
            style={
              Object {
                "borderRadius": 10,
                "marginHorizontal": 40,
                "marginTop": 10,
                "paddingVertical": 10,
              }
            }
            underlayColor="#aaa"
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#fff",
                  "fontSize": 20,
                  "paddingLeft": 10,
                  "textAlign": "center",
                }
              }
            >
               I have an account 
            </Text>
          </TouchableHighlight>,
        ],
        "style": Object {
          "backgroundColor": "#bbb",
          "flex": 1,
          "flexDirection": "column",
          "justifyContent": "center",
          "paddingTop": 22,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": "Top Goaler",
            "ellipsizeMode": "tail",
            "style": Object {
              "alignSelf": "center",
              "fontSize": 40,
            },
          },
          "ref": null,
          "rendered": "Top Goaler",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <ForwardRef(Themed.Input)
                autoCapitalize="none"
                containerStyle={
                  Object {
                    "marginBottom": 10,
                  }
                }
                leftIcon={
                  <Themed.Icon
                    color="grey"
                    name="person"
                    size={24}
                  />
                }
                onChangeText={[Function]}
                placeholder="Username"
                value=""
              />,
              <ForwardRef(Themed.Input)
                autoCapitalize="none"
                containerStyle={
                  Object {
                    "marginVertical": 10,
                  }
                }
                leftIcon={
                  <Themed.Icon
                    color="grey"
                    name="lock"
                    size={24}
                  />
                }
                onChangeText={[Function]}
                placeholder="Password"
                secureTextEntry={true}
                textContentType="password"
                value=""
              />,
              <ForwardRef(Themed.Input)
                autoCapitalize="none"
                containerStyle={
                  Object {
                    "marginVertical": 10,
                  }
                }
                leftIcon={
                  <Themed.Icon
                    color="grey"
                    name="email"
                    size={24}
                  />
                }
                onChangeText={[Function]}
                placeholder="Email"
                value=""
              />,
              <TouchableHighlight
                activeOpacity={0.85}
                delayPressOut={100}
                onPress={[Function]}
                style={
                  Object {
                    "backgroundColor": "grey",
                    "borderColor": "#fff",
                    "borderRadius": 20,
                    "borderWidth": 1,
                    "marginHorizontal": 40,
                    "marginTop": 10,
                    "paddingVertical": 10,
                  }
                }
                underlayColor="#aaa"
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "#fff",
                      "fontSize": 20,
                      "textAlign": "center",
                    }
                  }
                >
                   Create Account 
                </Text>
              </TouchableHighlight>,
            ],
            "title": "Sign up for free",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "autoCapitalize": "none",
                "containerStyle": Object {
                  "marginBottom": 10,
                },
                "leftIcon": <Themed.Icon
                  color="grey"
                  name="person"
                  size={24}
                />,
                "onChangeText": [Function],
                "placeholder": "Username",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "autoCapitalize": "none",
                "containerStyle": Object {
                  "marginVertical": 10,
                },
                "leftIcon": <Themed.Icon
                  color="grey"
                  name="lock"
                  size={24}
                />,
                "onChangeText": [Function],
                "placeholder": "Password",
                "secureTextEntry": true,
                "textContentType": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "autoCapitalize": "none",
                "containerStyle": Object {
                  "marginVertical": 10,
                },
                "leftIcon": <Themed.Icon
                  color="grey"
                  name="email"
                  size={24}
                />,
                "onChangeText": [Function],
                "placeholder": "Email",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "activeOpacity": 0.85,
                "children": <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "#fff",
                      "fontSize": 20,
                      "textAlign": "center",
                    }
                  }
                >
                   Create Account 
                </Text>,
                "delayPressOut": 100,
                "onPress": [Function],
                "style": Object {
                  "backgroundColor": "grey",
                  "borderColor": "#fff",
                  "borderRadius": 20,
                  "borderWidth": 1,
                  "marginHorizontal": 40,
                  "marginTop": 10,
                  "paddingVertical": 10,
                },
                "underlayColor": "#aaa",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "accessible": true,
                  "allowFontScaling": true,
                  "children": " Create Account ",
                  "ellipsizeMode": "tail",
                  "style": Object {
                    "color": "#fff",
                    "fontSize": 20,
                    "textAlign": "center",
                  },
                },
                "ref": null,
                "rendered": " Create Account ",
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": "Or you can also:",
            "ellipsizeMode": "tail",
            "style": Object {
              "alignSelf": "center",
              "color": "grey",
              "paddingTop": 20,
            },
          },
          "ref": null,
          "rendered": "Or you can also:",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeOpacity": 0.85,
            "children": <Component
              style={
                Object {
                  "alignSelf": "center",
                  "flexDirection": "row",
                }
              }
            >
              <Themed.Icon
                color="white"
                name="facebook-square"
                type="font-awesome"
              />
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 20,
                    "paddingLeft": 10,
                    "textAlign": "center",
                  }
                }
              >
                 Log in with Facebook 
              </Text>
            </Component>,
            "delayPressOut": 100,
            "style": Array [
              Object {
                "borderRadius": 10,
                "marginHorizontal": 40,
                "marginTop": 10,
                "paddingVertical": 10,
              },
              Object {
                "backgroundColor": "#3b5998",
              },
            ],
            "underlayColor": "#aaa",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Themed.Icon
                  color="white"
                  name="facebook-square"
                  type="font-awesome"
                />,
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "#fff",
                      "fontSize": 20,
                      "paddingLeft": 10,
                      "textAlign": "center",
                    }
                  }
                >
                   Log in with Facebook 
                </Text>,
              ],
              "style": Object {
                "alignSelf": "center",
                "flexDirection": "row",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "color": "white",
                  "name": "facebook-square",
                  "type": "font-awesome",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "accessible": true,
                  "allowFontScaling": true,
                  "children": " Log in with Facebook ",
                  "ellipsizeMode": "tail",
                  "style": Object {
                    "color": "#fff",
                    "fontSize": 20,
                    "paddingLeft": 10,
                    "textAlign": "center",
                  },
                },
                "ref": null,
                "rendered": " Log in with Facebook ",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeOpacity": 0.85,
            "children": <Component
              style={
                Object {
                  "alignSelf": "center",
                  "flexDirection": "row",
                }
              }
            >
              <Themed.Icon
                color="white"
                name="google-plus"
                type="font-awesome"
              />
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 20,
                    "paddingLeft": 10,
                    "textAlign": "center",
                  }
                }
              >
                 Log in with Google 
              </Text>
            </Component>,
            "delayPressOut": 100,
            "style": Array [
              Object {
                "borderRadius": 10,
                "marginHorizontal": 40,
                "marginTop": 10,
                "paddingVertical": 10,
              },
              Object {
                "backgroundColor": "#dd4b39",
              },
            ],
            "underlayColor": "#aaa",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Themed.Icon
                  color="white"
                  name="google-plus"
                  type="font-awesome"
                />,
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "#fff",
                      "fontSize": 20,
                      "paddingLeft": 10,
                      "textAlign": "center",
                    }
                  }
                >
                   Log in with Google 
                </Text>,
              ],
              "style": Object {
                "alignSelf": "center",
                "flexDirection": "row",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "color": "white",
                  "name": "google-plus",
                  "type": "font-awesome",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "accessible": true,
                  "allowFontScaling": true,
                  "children": " Log in with Google ",
                  "ellipsizeMode": "tail",
                  "style": Object {
                    "color": "#fff",
                    "fontSize": 20,
                    "paddingLeft": 10,
                    "textAlign": "center",
                  },
                },
                "ref": null,
                "rendered": " Log in with Google ",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeOpacity": 0.85,
            "children": <Component
              style={
                Object {
                  "alignSelf": "center",
                  "flexDirection": "row",
                }
              }
            >
              <Themed.Icon
                color="white"
                name="twitter"
                type="font-awesome"
              />
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#fff",
                    "fontSize": 20,
                    "paddingLeft": 10,
                    "textAlign": "center",
                  }
                }
              >
                 Log in with Twitter 
              </Text>
            </Component>,
            "delayPressOut": 100,
            "style": Array [
              Object {
                "borderRadius": 10,
                "marginHorizontal": 40,
                "marginTop": 10,
                "paddingVertical": 10,
              },
              Object {
                "backgroundColor": "#00aced",
              },
            ],
            "underlayColor": "#aaa",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Themed.Icon
                  color="white"
                  name="twitter"
                  type="font-awesome"
                />,
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "#fff",
                      "fontSize": 20,
                      "paddingLeft": 10,
                      "textAlign": "center",
                    }
                  }
                >
                   Log in with Twitter 
                </Text>,
              ],
              "style": Object {
                "alignSelf": "center",
                "flexDirection": "row",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "color": "white",
                  "name": "twitter",
                  "type": "font-awesome",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "accessible": true,
                  "allowFontScaling": true,
                  "children": " Log in with Twitter ",
                  "ellipsizeMode": "tail",
                  "style": Object {
                    "color": "#fff",
                    "fontSize": 20,
                    "paddingLeft": 10,
                    "textAlign": "center",
                  },
                },
                "ref": null,
                "rendered": " Log in with Twitter ",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeOpacity": 0.85,
            "children": <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#fff",
                  "fontSize": 20,
                  "paddingLeft": 10,
                  "textAlign": "center",
                }
              }
            >
               I have an account 
            </Text>,
            "delayPressOut": 100,
            "onPress": [Function],
            "style": Object {
              "borderRadius": 10,
              "marginHorizontal": 40,
              "marginTop": 10,
              "paddingVertical": 10,
            },
            "underlayColor": "#aaa",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "accessible": true,
              "allowFontScaling": true,
              "children": " I have an account ",
              "ellipsizeMode": "tail",
              "style": Object {
                "color": "#fff",
                "fontSize": 20,
                "paddingLeft": 10,
                "textAlign": "center",
              },
            },
            "ref": null,
            "rendered": " I have an account ",
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "View",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
  },
}
`;
