// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing Task Checklist component renders as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ScrollViewMock>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "fontSize": 20,
          "fontWeight": "bold",
          "marginTop": 10,
          "textAlign": "center",
        }
      }
    >
      Channel Tasks
    </Text>
    <TaskDetail
      pattern="Once"
      period="Daily"
      points="200"
      subtitle="Do a problem from LeetCode everyday"
      title="Leetcode Daily"
    />
    <TaskDetail
      pattern="Twice"
      period="Daily"
      points="300"
      subtitle="Do two problems from LeetCode everyday"
      title="Leetcode Daily x2"
    />
    <TaskDetail
      pattern="Once"
      period="Monthly"
      points="350"
      subtitle="Solve 100 Problems from LeetCode"
      title="Solve 100 Problems"
    />
  </ScrollViewMock>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): undefined,
  Symbol(enzyme.__nodes__): Array [
    undefined,
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
  },
}
`;
